---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: "storage-class-accessor.storage.kubesphere.io"
webhooks:
- name: "storage-class-accessor.storage.kubesphere.io"
  rules:
  - apiGroups:   [""]
    apiVersions: ["v1"]
    operations:  ["CREATE"]
    resources:   ["persistentvolumeclaims"]
    scope:       "*"
  clientConfig:
    service:
      namespace: ${NAMESPACE}
      name: ${SERVICE}
      path: "/persistentvolumeclaims"
    caBundle: ${CA_BUNDLE}
  admissionReviewVersions: ["v1"]
  sideEffects: None
  failurePolicy: Ignore
  timeoutSeconds: 5
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: storage-class-accessor
  namespace: ${NAMESPACE}
  labels:
    role: controller
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: storage-class-accessor
  labels:
    role: controller
rules:
  - apiGroups: [ "" ]
    resources: [ "namespaces" ]
    verbs: [ "get", "list", "watch"]

  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]

  - apiGroups: ["storage.kubesphere.io"]
    resources: ["accessors"]
    verbs: [ "get", "list", "watch"]

  - apiGroups: ["tenant.kubesphere.io"]
    resources: ["workspaces"]
    verbs: [ "get", "list", "watch"]

---
  kind: ClusterRoleBinding
  apiVersion: rbac.authorization.k8s.io/v1
  metadata:
    name: storage-class-accessor
    labels:
      role: controller
  subjects:
    - kind: ServiceAccount
      name: storage-class-accessor
      namespace: ${NAMESPACE}
  roleRef:
    kind: ClusterRole
    name: storage-class-accessor
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-class-accessor
  namespace: ${NAMESPACE}
  labels:
    app: storage-class-accessor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storage-class-accessor
  template:
    metadata:
      labels:
        app: storage-class-accessor
    spec:
      containers:
      - name: storage-class-accessor
        image: kubesphere/storageclass-accessor:latest
        imagePullPolicy: Always
        args: ['--tls-cert-file=/etc/run/certs/tls.crt', '--tls-private-key-file=/etc/run/certs/tls.key']
        ports:
        - containerPort: 443
        volumeMounts:
          - name: storage-class-accessor-webhook-certs
            mountPath: /etc/run/certs
            readOnly: true
      volumes:
        - name: storage-class-accessor-webhook-certs
          secret:
            secretName: storage-class-accessor
      serviceAccountName: storage-class-accessor
      serviceAccount: storage-class-accessor
---
apiVersion: v1
kind: Service
metadata:
  name: storage-class-accessor
  namespace: ${NAMESPACE}
spec:
  selector:
    app: storage-class-accessor
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443


